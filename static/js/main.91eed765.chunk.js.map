{"version":3,"sources":["Todo.js","ShowTodos.js","Header.js","App.js","index.js"],"names":["Todo","todo","completeToggle","className","name","type","checked","completed","onChange","id","ShowTodos","todos","map","Header","App","useState","setTodos","todoNameRef","useRef","KEY_LOCAL_STORAGE","addTodo","current","value","previousTodos","v4","useEffect","JSON","parse","localStorage","getItem","setItem","stringify","newTodos","modifiedTodo","find","newTodo","ref","onKeyDown","e","key","onClick","filter","length","src","ReactDOM","render","document","getElementById"],"mappings":"2LAEe,SAASA,EAAT,GAAyC,IAAzBC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,eAIjC,OACI,8BACI,wBAAOC,UAAU,YAAjB,UAA8BF,EAAKG,KAC/B,uBAAOC,KAAK,WAAWC,QAASL,EAAKM,UAAWC,SAN5D,WACIN,EAAeD,EAAKQ,OAMZ,sBAAMN,UAAU,mBCPjB,SAASO,EAAT,GAA+C,IAA1BC,EAAyB,EAAzBA,MAAOT,EAAkB,EAAlBA,eACvC,OACI,qBAAKC,UAAU,QAAf,SACKQ,EAAMC,KAAI,SAAAX,GACP,OAAO,cAACD,EAAD,CAAoBC,KAAMA,EAAMC,eAAgBA,GAArCD,EAAKQ,SCLxB,SAASI,IACpB,OACI,qBAAKV,UAAU,mBAAf,mC,YC+DOW,MA7Df,WACE,MAA0BC,mBAAS,IAAnC,mBAAOJ,EAAP,KAAcK,EAAd,KAEMC,EAAcC,mBACdC,EAAoB,WAU1B,SAASC,IACP,GAAIH,EAAYI,QAAQC,MAAO,CAC7B,IAAMlB,EAAOa,EAAYI,QAAQC,MACjCN,GAAS,SAAAO,GACP,MAAM,GAAN,mBAAWA,GAAX,CAA0B,CAAEd,GAAIe,cAAMpB,KAAMA,EAAMG,WAAW,QAE/DU,EAAYI,QAAQC,MAAQ,MAsBhC,OApCAG,qBAAU,WACRT,EAASU,KAAKC,MAAMC,aAAaC,QAAQV,OACxC,IAEHM,qBAAU,WACRG,aAAaE,QAAQX,EAAmBO,KAAKK,UAAUpB,MACtD,CAACA,IA+BF,qCACE,sBAAKR,UAAU,MAAf,UACE,cAACU,EAAD,IACA,cAACH,EAAD,CAAWC,MAAOA,EAAOT,eAZ/B,SAAwBO,GACtB,IAAMuB,EAAQ,YAAOrB,GACfsB,EAAeD,EAASE,MAAK,SAAAC,GAAO,OACxCA,EAAQ1B,KAAOA,KACjBwB,EAAa1B,WAAa0B,EAAa1B,UACvCS,EAASgB,MAQL,sBAAK7B,UAAU,gBAAf,UACE,uBAAOiC,IAAKnB,EAAaZ,KAAK,OAAOgC,UAxB7C,SAAmBC,GACH,UAAVA,EAAEC,KACJnB,OAuBI,wBAAQoB,QAASpB,EAAjB,iBACA,wBAAQoB,QApBhB,WACExB,EAASL,EAAM8B,QAAO,SAAAxC,GAAI,OAAKA,EAAKM,eAmB9B,gCAEF,sBAAKJ,UAAU,mBAAf,UAAmCQ,EAAM8B,QAAO,SAAAxC,GAAI,OAAKA,EAAKM,aAAWmC,OAAzE,0BAEF,sBAAMvC,UAAU,YAChB,sBAAMA,UAAU,YAChB,qBAAKA,UAAU,YAAYwC,IAAI,uFC1DrCC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.91eed765.chunk.js","sourcesContent":["import React from 'react'\n\nexport default function Todo({ todo, completeToggle }) {\n    function handleToggle() {\n        completeToggle(todo.id)\n    }\n    return (\n        <div>\n            <label className='container'>{todo.name}\n                <input type='checkbox' checked={todo.completed} onChange={handleToggle} />\n                <span className='checkmark'></span>\n            </label>\n        </div>\n    )\n}\n","import React from 'react'\nimport Todo from './Todo'\n\nexport default function ShowTodos({ todos, completeToggle }) {\n    return (\n        <div className='todos'>\n            {todos.map(todo => {\n                return <Todo key={todo.id} todo={todo} completeToggle={completeToggle} />\n            })}\n        </div>\n    )\n}\n","import React from 'react'\n\nexport default function Header() {\n    return (\n        <div className='header-container'>\n            Todo List Application\n        </div>\n    )\n}\n","import { useState, useRef, useEffect } from 'react'\nimport styles from './styles.css'\nimport ShowTodos from './ShowTodos'\nimport Header from './Header'\nimport { v4 } from 'uuid'\n\nfunction App() {\n  const [todos, setTodos] = useState([])\n\n  const todoNameRef = useRef()\n  const KEY_LOCAL_STORAGE = 'todo_key'\n\n  useEffect(() => {\n    setTodos(JSON.parse(localStorage.getItem(KEY_LOCAL_STORAGE)))\n  }, [])\n\n  useEffect(() => {\n    localStorage.setItem(KEY_LOCAL_STORAGE, JSON.stringify(todos))\n  }, [todos])\n\n  function addTodo() {\n    if (todoNameRef.current.value) {\n      const name = todoNameRef.current.value;\n      setTodos(previousTodos => {\n        return [...previousTodos, { id: v4(), name: name, completed: false }]\n      })\n      todoNameRef.current.value = null;\n    }\n  }\n\n  function onKeyDown(e) {\n    if (e.key === 'Enter') {\n      addTodo()\n    }\n  }\n\n  function clearCompletedTodo() {\n    setTodos(todos.filter(todo => !todo.completed))\n  }\n\n  function completeToggle(id) {\n    const newTodos = [...todos];\n    const modifiedTodo = newTodos.find(newTodo =>\n      newTodo.id === id)\n    modifiedTodo.completed = !modifiedTodo.completed;\n    setTodos(newTodos)\n  }\n\n  return (\n    <>\n      <div className='app'>\n        <Header />\n        <ShowTodos todos={todos} completeToggle={completeToggle} />\n        <div className='input-section'>\n          <input ref={todoNameRef} type='text' onKeyDown={onKeyDown} />\n          <button onClick={addTodo}>Add</button>\n          <button onClick={clearCompletedTodo} >Clear Completed</button>\n        </div>\n        <div className='left-to-complete'>{todos.filter(todo => !todo.completed).length} left to complete</div>\n      </div>\n      <span className='circle1'></span>\n      <span className='circle2'></span>\n      <img className='react-img' src='https://www.pinclipart.com/picdir/middle/537-5374089_react-js-logo-clipart.png'></img>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root')\n);\n\n"],"sourceRoot":""}